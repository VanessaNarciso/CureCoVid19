
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND CARGAARCHIVO CHAR COMMA COMMENT CORRELACIONA CTEFLOAT CTEINT CTESTRING DATAFRAME DESDE DIVIDE ENTONCES EQUALS ESCRIBE FLOAT FUNCION GREATEREQ GREATERTHAN HACER HASTA HAZ ID INICIA INT ISEQUAL LBRACKET LCURBRACKET LEE LESSEQ LESSTHAN LPAREN MEDIA MIENTRAS MINUS NOTEQUAL OR PLUS PRINCIPAL PROGRAMA RBRACKET RCURBRACKET REGRESA RPAREN RQUOTES SEMICOLON SI SINO STRING TIMES VAR VARIABLES VOID\n    programa :  PROGRAMA ID SEMICOLON declara_vars declara_fun principal\n    \n    declara_fun : functions\n    \n    functions : function_t functions\n        | function_v functions\n        | empty\n    \n    principal : principalI declara_vars principal1 RCURBRACKET\n    \n    principalI : principalS LCURBRACKET\n    \n    principalS : PRINCIPAL\n    \n    principal1 : stmt_v principal1\n        | empty\n    \n    declara_vars : vars declara_vars\n        | empty\n    \n    vars : VAR type ID dimension SEMICOLON\n    \n    type : INT\n        | FLOAT\n        | CHAR\n        | STRING\n        | DATAFRAME\n    \n    dimension : LBRACKET CTEINT RBRACKET\n        | LBRACKET CTEINT RBRACKET LBRACKET CTEINT RBRACKET\n        | empty\n    \n    function_t : FUNCION functionI function2 inicia_fun declara_vars function4 termina_fun\n    \n    functionI : type ID\n    \n    function2 : LPAREN function3 RPAREN\n    \n    function3 : funParam function5\n        | empty\n    \n    funParam : type ID\n    \n    inicia_fun : LCURBRACKET\n    \n    function4 : statement function4\n        | empty\n    \n    statement : assignment\n        | condition\n        | write\n        | loop\n        | read\n        | loadData\n        | funCall SEMICOLON\n        | return\n    \n    assignment : id equals assignment3 SEMICOLON\n    \n    id : identifier indice_dimension\n    \n    identifier : ID\n    \n    indice_dimension : LBRACKET exp RBRACKET LBRACKET exp RBRACKET\n        | LBRACKET exp RBRACKET\n        | empty\n    \n    equals : EQUALS\n    \n    assignment3 : exp\n        | read\n    \n    condition : SI head_condition ENTONCES body condition1\n    \n    head_condition : LPAREN expression close_condition\n    \n    body : LCURBRACKET body1 RCURBRACKET\n    \n    body1 : statement body1\n        | empty\n    \n    condition1 : SINO body\n        | empty\n    \n    close_condition : RPAREN\n    \n    write : ESCRIBE LPAREN expression RPAREN SEMICOLON\n    \n    expression : exp loper exp\n        | exp\n    \n    loper : GREATERTHAN\n        | LESSTHAN\n        | GREATEREQ\n        | LESSEQ\n        | NOTEQUAL\n        | ISEQUAL\n    \n    exp : term\n        | term exp_o exp\n    \n    exp_o : PLUS\n        | MINUS\n    \n    term : factor term_o term\n        | factor\n    \n    factor : vcte\n        | leftP expression rightP\n    \n    leftP : LPAREN\n    \n    rightP : RPAREN\n    \n    vcte : cte_int\n        | cte_float\n        | cte_string\n        | id\n        | funCall\n        | vectorMatriz\n    \n    cte_int : negativo CTEINT\n    \n    cte_float : negativo CTEFLOAT\n    \n    cte_string : negativo CTESTRING\n    \n    negativo : MINUS\n        | empty\n    \n    vectorMatriz : LBRACKET vm1 RBRACKET\n        | vm1\n    \n    vm1 : LBRACKET vm2 RBRACKET COMMA vm1\n        | LBRACKET vm2 RBRACKET\n    \n    vm2 : exp COMMA vm2\n        | exp\n        | empty\n    \n    term_o : TIMES\n        | DIVIDE\n    \n    loop : mientras\n        | desde\n    \n    mientras : mientras1 HAZ body\n    \n    mientras1 : mientras_w LPAREN expression RPAREN\n    \n    mientras_w : MIENTRAS\n    \n    desde : nuevo_desde desdeBody\n    \n    nuevo_desde : DESDE id EQUALS desde2 HASTA desde2 HACER\n    \n    desde2 : exp\n    \n    desdeBody : body\n    \n    read : LEE LPAREN id read1 RPAREN SEMICOLON\n    \n    read1 : LBRACKET exp RBRACKET  LBRACKET exp RBRACKET\n        | LBRACKET exp RBRACKET\n        | empty\n    \n    loadData : CARGAARCHIVO LPAREN ID route maxVariables maxRows RPAREN SEMICOLON\n    \n    route : CTESTRING\n    \n    maxVariables : CTEINT\n    \n    maxRows : CTEINT\n    \n    funCall : ID iniciaFunCall funCall2 terminaFunCall\n    \n    iniciaFunCall : LPAREN\n    \n    funCall2 : funcallParam funCall3\n        | empty\n    \n    funcallParam : exp\n    \n    funCall3 : COMMA funcallParam funCall3\n        | empty\n    \n    terminaFunCall : RPAREN\n    \n    return : REGRESA return1 SEMICOLON\n    \n    return1 : vcte\n        | exp\n    \n    function5 : COMMA funParam function5\n        | empty\n    \n    termina_fun : RCURBRACKET\n    \n    function_v : FUNCION functionV function2 inicia_fun declara_vars function9 termina_fun\n    \n    functionV : VOID ID\n    \n    function9 : stmt_v function9\n        | empty\n    \n    stmt_v : assignment\n        | condition\n        | write\n        | loop\n        | read\n        | loadData\n        | funCall SEMICOLON\n        | return\n    \n    empty :\n    '
    
_lr_action_items = {'PROGRAMA':([0,],[2,]),'$end':([1,22,78,],[0,-1,-6,]),'ID':([2,6,7,15,16,17,18,19,20,21,23,30,31,33,34,44,46,47,48,49,50,51,53,57,58,62,67,69,70,74,75,76,80,81,82,84,85,86,87,88,89,101,106,107,109,112,113,114,115,118,124,140,141,142,143,147,152,153,154,157,159,161,162,163,164,165,166,168,170,172,176,179,180,183,184,185,186,187,188,189,192,199,204,209,211,222,224,226,234,235,237,238,243,247,252,],[3,-138,-12,-11,32,-14,-15,-16,-17,-18,-138,38,39,61,-7,61,-130,-131,-132,-133,-134,-135,-137,-95,-96,61,117,-138,-28,123,-138,-13,-136,61,-45,61,61,117,135,61,-113,61,61,-73,61,-100,-103,61,61,61,61,-120,61,-67,-68,61,61,-93,-94,-97,61,-31,-32,-33,-34,-35,-36,-38,61,61,61,-39,-138,61,-59,-60,-61,-62,-63,-64,61,61,61,-50,-37,-48,-54,-56,61,61,-53,-104,61,61,-108,]),'SEMICOLON':([3,32,40,42,52,61,63,90,91,92,93,94,95,96,97,98,99,102,103,108,110,125,126,127,128,129,144,145,146,167,190,196,197,201,202,203,205,206,207,208,227,236,238,244,248,249,],[4,-138,76,-21,80,-41,-138,140,-71,-122,-75,-76,-77,-78,-79,-80,-65,-87,-70,-40,-44,-19,179,-46,-47,-71,-81,-82,-83,211,226,-112,-119,-66,-86,-89,-69,-72,-74,-43,238,-20,-104,-88,252,-42,]),'VAR':([4,6,23,34,69,70,75,76,],[8,8,8,-7,8,-28,8,-13,]),'FUNCION':([4,5,6,7,11,12,15,76,215,216,219,],[-138,14,-138,-12,14,14,-11,-13,-22,-125,-126,]),'PRINCIPAL':([4,5,6,7,9,10,11,12,13,15,26,27,76,215,216,219,],[-138,-138,-138,-12,25,-2,-138,-138,-5,-11,-3,-4,-13,-22,-125,-126,]),'SI':([6,7,15,23,33,34,44,46,47,48,49,50,51,53,57,58,69,70,75,76,80,112,113,114,118,124,140,157,159,161,162,163,164,165,166,168,172,176,179,180,209,211,222,224,226,237,238,252,],[-138,-12,-11,-138,55,-7,55,-130,-131,-132,-133,-134,-135,-137,-95,-96,-138,-28,-138,-13,-136,-100,-103,55,55,55,-120,-97,55,-31,-32,-33,-34,-35,-36,-38,55,55,-39,-138,-50,-37,-48,-54,-56,-53,-104,-108,]),'ESCRIBE':([6,7,15,23,33,34,44,46,47,48,49,50,51,53,57,58,69,70,75,76,80,112,113,114,118,124,140,157,159,161,162,163,164,165,166,168,172,176,179,180,209,211,222,224,226,237,238,252,],[-138,-12,-11,-138,56,-7,56,-130,-131,-132,-133,-134,-135,-137,-95,-96,-138,-28,-138,-13,-136,-100,-103,56,56,56,-120,-97,56,-31,-32,-33,-34,-35,-36,-38,56,56,-39,-138,-50,-37,-48,-54,-56,-53,-104,-108,]),'LEE':([6,7,15,23,33,34,44,46,47,48,49,50,51,53,57,58,69,70,75,76,80,81,82,112,113,114,118,124,140,157,159,161,162,163,164,165,166,168,172,176,179,180,209,211,222,224,226,237,238,252,],[-138,-12,-11,-138,59,-7,59,-130,-131,-132,-133,-134,-135,-137,-95,-96,-138,-28,-138,-13,-136,59,-45,-100,-103,59,59,59,-120,-97,59,-31,-32,-33,-34,-35,-36,-38,59,59,-39,-138,-50,-37,-48,-54,-56,-53,-104,-108,]),'CARGAARCHIVO':([6,7,15,23,33,34,44,46,47,48,49,50,51,53,57,58,69,70,75,76,80,112,113,114,118,124,140,157,159,161,162,163,164,165,166,168,172,176,179,180,209,211,222,224,226,237,238,252,],[-138,-12,-11,-138,60,-7,60,-130,-131,-132,-133,-134,-135,-137,-95,-96,-138,-28,-138,-13,-136,-100,-103,60,60,60,-120,-97,60,-31,-32,-33,-34,-35,-36,-38,60,60,-39,-138,-50,-37,-48,-54,-56,-53,-104,-108,]),'REGRESA':([6,7,15,23,33,34,44,46,47,48,49,50,51,53,57,58,69,70,75,76,80,112,113,114,118,124,140,157,159,161,162,163,164,165,166,168,172,176,179,180,209,211,222,224,226,237,238,252,],[-138,-12,-11,-138,62,-7,62,-130,-131,-132,-133,-134,-135,-137,-95,-96,-138,-28,-138,-13,-136,-100,-103,62,62,62,-120,-97,62,-31,-32,-33,-34,-35,-36,-38,62,62,-39,-138,-50,-37,-48,-54,-56,-53,-104,-108,]),'DESDE':([6,7,15,23,33,34,44,46,47,48,49,50,51,53,57,58,69,70,75,76,80,112,113,114,118,124,140,157,159,161,162,163,164,165,166,168,172,176,179,180,209,211,222,224,226,237,238,252,],[-138,-12,-11,-138,67,-7,67,-130,-131,-132,-133,-134,-135,-137,-95,-96,-138,-28,-138,-13,-136,-100,-103,67,67,67,-120,-97,67,-31,-32,-33,-34,-35,-36,-38,67,67,-39,-138,-50,-37,-48,-54,-56,-53,-104,-108,]),'MIENTRAS':([6,7,15,23,33,34,44,46,47,48,49,50,51,53,57,58,69,70,75,76,80,112,113,114,118,124,140,157,159,161,162,163,164,165,166,168,172,176,179,180,209,211,222,224,226,237,238,252,],[-138,-12,-11,-138,68,-7,68,-130,-131,-132,-133,-134,-135,-137,-95,-96,-138,-28,-138,-13,-136,-100,-103,68,68,68,-120,-97,68,-31,-32,-33,-34,-35,-36,-38,68,68,-39,-138,-50,-37,-48,-54,-56,-53,-104,-108,]),'RCURBRACKET':([6,7,15,23,33,34,43,44,45,46,47,48,49,50,51,53,57,58,69,70,75,76,79,80,112,113,114,118,124,140,157,158,159,160,161,162,163,164,165,166,168,171,172,173,175,176,177,179,180,209,210,211,217,220,222,224,226,237,238,252,],[-138,-12,-11,-138,-138,-7,78,-138,-10,-130,-131,-132,-133,-134,-135,-137,-95,-96,-138,-28,-138,-13,-9,-136,-100,-103,-138,-138,-138,-120,-97,209,-138,-52,-31,-32,-33,-34,-35,-36,-38,216,-138,-30,216,-138,-129,-39,-138,-50,-51,-37,-29,-128,-48,-54,-56,-53,-104,-108,]),'INT':([8,14,36,121,],[17,17,17,17,]),'FLOAT':([8,14,36,121,],[18,18,18,18,]),'CHAR':([8,14,36,121,],[19,19,19,19,]),'STRING':([8,14,36,121,],[20,20,20,20,]),'DATAFRAME':([8,14,36,121,],[21,21,21,21,]),'VOID':([14,],[31,]),'LCURBRACKET':([24,25,35,37,65,111,119,130,223,250,],[34,-8,70,70,114,114,-24,114,114,-101,]),'LPAREN':([28,29,38,39,55,56,59,60,61,62,66,68,81,82,84,85,88,89,101,106,107,109,115,141,142,143,147,152,153,154,170,183,184,185,186,187,188,189,192,199,204,234,235,243,247,],[36,36,-23,-127,84,85,86,87,89,107,115,-99,107,-45,107,107,107,-113,107,107,-73,107,107,107,-67,-68,107,107,-93,-94,107,107,-59,-60,-61,-62,-63,-64,107,107,107,107,107,107,107,]),'LBRACKET':([32,61,62,63,81,82,84,85,88,89,101,106,107,108,109,110,115,117,125,134,141,142,143,147,152,153,154,170,183,184,185,186,187,188,189,192,199,204,208,232,234,235,239,243,247,249,],[41,-41,101,109,101,-45,101,101,101,-113,147,101,-73,-40,101,-44,101,-41,178,192,101,-67,-68,147,101,-93,-94,101,101,-59,-60,-61,-62,-63,-64,101,101,101,234,243,101,101,247,101,101,-42,]),'RPAREN':([36,61,63,71,72,73,88,89,93,94,95,96,97,98,99,102,103,108,110,117,120,122,123,129,131,132,133,134,136,137,138,139,144,145,146,155,169,174,191,193,196,197,198,200,201,202,203,205,206,207,208,218,225,231,239,240,241,242,244,249,253,],[-138,-41,-138,119,-138,-26,-138,-113,-75,-76,-77,-78,-79,-80,-65,-87,-70,-40,-44,-41,-25,-124,-27,-71,182,-58,190,-138,197,-138,-115,-116,-81,-82,-83,207,212,-138,227,-107,-112,-119,-114,-118,-66,-86,-89,-69,-72,-74,-43,-123,-57,-138,-106,248,-111,-117,-88,-42,-105,]),'CTEINT':([41,62,81,82,84,85,88,89,100,101,104,105,106,107,109,115,138,141,142,143,147,151,152,153,154,170,178,183,184,185,186,187,188,189,192,194,195,199,204,229,230,234,235,243,247,],[77,-138,-138,-45,-138,-138,-138,-113,144,-138,-84,-85,-138,-73,-138,-138,-85,-138,-67,-68,-138,-85,-138,-93,-94,-138,221,-138,-59,-60,-61,-62,-63,-64,-138,230,-109,-138,-138,241,-110,-138,-138,-138,-138,]),'EQUALS':([54,61,63,108,110,116,117,208,249,],[82,-41,-138,-40,-44,170,-41,-43,-42,]),'TIMES':([61,63,91,93,94,95,96,97,98,102,103,108,110,129,144,145,146,148,196,197,202,203,206,207,208,244,249,],[-41,-138,-71,-75,-76,-77,-78,-79,-80,-87,153,-40,-44,-71,-81,-82,-83,-87,-112,-119,-86,-89,-72,-74,-43,-88,-42,]),'DIVIDE':([61,63,91,93,94,95,96,97,98,102,103,108,110,129,144,145,146,148,196,197,202,203,206,207,208,244,249,],[-41,-138,-71,-75,-76,-77,-78,-79,-80,-87,154,-40,-44,-71,-81,-82,-83,-87,-112,-119,-86,-89,-72,-74,-43,-88,-42,]),'PLUS':([61,63,91,93,94,95,96,97,98,99,102,103,108,110,129,144,145,146,148,196,197,202,203,205,206,207,208,244,249,],[-41,-138,-71,-75,-76,-77,-78,-79,-80,142,-87,-70,-40,-44,-71,-81,-82,-83,-87,-112,-119,-86,-89,-69,-72,-74,-43,-88,-42,]),'MINUS':([61,62,63,81,82,84,85,88,89,91,93,94,95,96,97,98,99,101,102,103,106,107,108,109,110,115,129,141,142,143,144,145,146,147,148,152,153,154,170,183,184,185,186,187,188,189,192,196,197,199,202,203,204,205,206,207,208,234,235,243,244,247,249,],[-41,104,-138,104,-45,104,104,104,-113,-71,-75,-76,-77,-78,-79,-80,143,104,-87,-70,104,-73,-40,104,-44,104,-71,104,-67,-68,-81,-82,-83,104,-87,104,-93,-94,104,104,-59,-60,-61,-62,-63,-64,104,-112,-119,104,-86,-89,104,-69,-72,-74,-43,104,104,104,-88,104,-42,]),'GREATERTHAN':([61,63,93,94,95,96,97,98,99,102,103,108,110,129,132,144,145,146,196,197,201,202,203,205,206,207,208,244,249,],[-41,-138,-75,-76,-77,-78,-79,-80,-65,-87,-70,-40,-44,-71,184,-81,-82,-83,-112,-119,-66,-86,-89,-69,-72,-74,-43,-88,-42,]),'LESSTHAN':([61,63,93,94,95,96,97,98,99,102,103,108,110,129,132,144,145,146,196,197,201,202,203,205,206,207,208,244,249,],[-41,-138,-75,-76,-77,-78,-79,-80,-65,-87,-70,-40,-44,-71,185,-81,-82,-83,-112,-119,-66,-86,-89,-69,-72,-74,-43,-88,-42,]),'GREATEREQ':([61,63,93,94,95,96,97,98,99,102,103,108,110,129,132,144,145,146,196,197,201,202,203,205,206,207,208,244,249,],[-41,-138,-75,-76,-77,-78,-79,-80,-65,-87,-70,-40,-44,-71,186,-81,-82,-83,-112,-119,-66,-86,-89,-69,-72,-74,-43,-88,-42,]),'LESSEQ':([61,63,93,94,95,96,97,98,99,102,103,108,110,129,132,144,145,146,196,197,201,202,203,205,206,207,208,244,249,],[-41,-138,-75,-76,-77,-78,-79,-80,-65,-87,-70,-40,-44,-71,187,-81,-82,-83,-112,-119,-66,-86,-89,-69,-72,-74,-43,-88,-42,]),'NOTEQUAL':([61,63,93,94,95,96,97,98,99,102,103,108,110,129,132,144,145,146,196,197,201,202,203,205,206,207,208,244,249,],[-41,-138,-75,-76,-77,-78,-79,-80,-65,-87,-70,-40,-44,-71,188,-81,-82,-83,-112,-119,-66,-86,-89,-69,-72,-74,-43,-88,-42,]),'ISEQUAL':([61,63,93,94,95,96,97,98,99,102,103,108,110,129,132,144,145,146,196,197,201,202,203,205,206,207,208,244,249,],[-41,-138,-75,-76,-77,-78,-79,-80,-65,-87,-70,-40,-44,-71,189,-81,-82,-83,-112,-119,-66,-86,-89,-69,-72,-74,-43,-88,-42,]),'COMMA':([61,63,72,93,94,95,96,97,98,99,102,103,108,110,123,129,137,139,144,145,146,148,150,174,196,197,201,202,203,205,206,207,208,231,244,249,],[-41,-138,121,-75,-76,-77,-78,-79,-80,-65,-87,-70,-40,-44,-27,-71,199,-116,-81,-82,-83,-87,204,121,-112,-119,-66,-86,232,-69,-72,-74,-43,199,-88,-42,]),'RBRACKET':([61,63,77,93,94,95,96,97,98,99,101,102,103,108,110,129,144,145,146,147,148,149,150,151,156,196,197,201,202,203,204,205,206,207,208,221,228,233,243,244,245,249,251,],[-41,-138,125,-75,-76,-77,-78,-79,-80,-65,-138,-87,-70,-40,-44,-71,-81,-82,-83,-138,202,203,-91,-92,208,-112,-119,-66,-86,-89,-138,-69,-72,-74,-43,236,239,-90,-138,-88,249,-42,253,]),'HASTA':([61,63,93,94,95,96,97,98,99,102,103,108,110,129,144,145,146,196,197,201,202,203,205,206,207,208,213,214,244,249,],[-41,-138,-75,-76,-77,-78,-79,-80,-65,-87,-70,-40,-44,-71,-81,-82,-83,-112,-119,-66,-86,-89,-69,-72,-74,-43,235,-102,-88,-42,]),'HACER':([61,63,93,94,95,96,97,98,99,102,103,108,110,129,144,145,146,196,197,201,202,203,205,206,207,208,214,244,246,249,],[-41,-138,-75,-76,-77,-78,-79,-80,-65,-87,-70,-40,-44,-71,-81,-82,-83,-112,-119,-66,-86,-89,-69,-72,-74,-43,-102,-88,250,-42,]),'CTEFLOAT':([62,81,82,84,85,88,89,100,101,104,105,106,107,109,115,138,141,142,143,147,151,152,153,154,170,183,184,185,186,187,188,189,192,199,204,234,235,243,247,],[-138,-138,-45,-138,-138,-138,-113,145,-138,-84,-85,-138,-73,-138,-138,-85,-138,-67,-68,-138,-85,-138,-93,-94,-138,-138,-59,-60,-61,-62,-63,-64,-138,-138,-138,-138,-138,-138,-138,]),'CTESTRING':([62,81,82,84,85,88,89,100,101,104,105,106,107,109,115,135,138,141,142,143,147,151,152,153,154,170,183,184,185,186,187,188,189,192,199,204,234,235,243,247,],[-138,-138,-45,-138,-138,-138,-113,146,-138,-84,-85,-138,-73,-138,-138,195,-85,-138,-67,-68,-138,-85,-138,-93,-94,-138,-138,-59,-60,-61,-62,-63,-64,-138,-138,-138,-138,-138,-138,-138,]),'HAZ':([64,212,],[111,-98,]),'ENTONCES':([83,181,182,],[130,-49,-55,]),'SINO':([180,209,],[223,-50,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'declara_vars':([4,6,23,69,75,],[5,15,33,118,124,]),'vars':([4,6,23,69,75,],[6,6,6,6,6,]),'empty':([4,5,6,11,12,23,32,33,36,44,62,63,69,72,75,81,84,85,88,101,106,109,114,115,118,124,134,137,141,147,152,159,170,172,174,176,180,183,192,199,204,231,234,235,243,247,],[7,13,7,13,13,7,42,45,73,45,105,110,7,122,7,105,105,105,138,151,105,105,160,105,173,177,193,200,105,151,105,160,105,173,122,177,224,105,105,105,151,200,105,105,151,105,]),'declara_fun':([5,],[9,]),'functions':([5,11,12,],[10,26,27,]),'function_t':([5,11,12,],[11,11,11,]),'function_v':([5,11,12,],[12,12,12,]),'type':([8,14,36,121,],[16,30,74,74,]),'principal':([9,],[22,]),'principalI':([9,],[23,]),'principalS':([9,],[24,]),'functionI':([14,],[28,]),'functionV':([14,],[29,]),'function2':([28,29,],[35,37,]),'dimension':([32,],[40,]),'principal1':([33,44,],[43,79,]),'stmt_v':([33,44,124,176,],[44,44,176,176,]),'assignment':([33,44,114,118,124,159,172,176,],[46,46,161,161,46,161,161,46,]),'condition':([33,44,114,118,124,159,172,176,],[47,47,162,162,47,162,162,47,]),'write':([33,44,114,118,124,159,172,176,],[48,48,163,163,48,163,163,48,]),'loop':([33,44,114,118,124,159,172,176,],[49,49,164,164,49,164,164,49,]),'read':([33,44,81,114,118,124,159,172,176,],[50,50,128,165,165,50,165,165,50,]),'loadData':([33,44,114,118,124,159,172,176,],[51,51,166,166,51,166,166,51,]),'funCall':([33,44,62,81,84,85,88,101,106,109,114,115,118,124,141,147,152,159,170,172,176,183,192,199,204,234,235,243,247,],[52,52,97,97,97,97,97,97,97,97,167,97,167,52,97,97,97,167,97,167,52,97,97,97,97,97,97,97,97,]),'return':([33,44,114,118,124,159,172,176,],[53,53,168,168,53,168,168,53,]),'id':([33,44,62,67,81,84,85,86,88,101,106,109,114,115,118,124,141,147,152,159,170,172,176,183,192,199,204,234,235,243,247,],[54,54,96,116,96,96,96,134,96,96,96,96,54,96,54,54,96,96,96,54,96,54,54,96,96,96,96,96,96,96,96,]),'mientras':([33,44,114,118,124,159,172,176,],[57,57,57,57,57,57,57,57,]),'desde':([33,44,114,118,124,159,172,176,],[58,58,58,58,58,58,58,58,]),'identifier':([33,44,62,67,81,84,85,86,88,101,106,109,114,115,118,124,141,147,152,159,170,172,176,183,192,199,204,234,235,243,247,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'mientras1':([33,44,114,118,124,159,172,176,],[64,64,64,64,64,64,64,64,]),'nuevo_desde':([33,44,114,118,124,159,172,176,],[65,65,65,65,65,65,65,65,]),'mientras_w':([33,44,114,118,124,159,172,176,],[66,66,66,66,66,66,66,66,]),'inicia_fun':([35,37,],[69,75,]),'function3':([36,],[71,]),'funParam':([36,121,],[72,174,]),'equals':([54,],[81,]),'head_condition':([55,],[83,]),'iniciaFunCall':([61,],[88,]),'return1':([62,],[90,]),'vcte':([62,81,84,85,88,101,106,109,115,141,147,152,170,183,192,199,204,234,235,243,247,],[91,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,]),'exp':([62,81,84,85,88,101,106,109,115,141,147,170,183,192,199,204,234,235,243,247,],[92,127,132,132,139,150,132,156,132,201,150,214,225,228,139,150,245,214,150,251,]),'cte_int':([62,81,84,85,88,101,106,109,115,141,147,152,170,183,192,199,204,234,235,243,247,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'cte_float':([62,81,84,85,88,101,106,109,115,141,147,152,170,183,192,199,204,234,235,243,247,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'cte_string':([62,81,84,85,88,101,106,109,115,141,147,152,170,183,192,199,204,234,235,243,247,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'vectorMatriz':([62,81,84,85,88,101,106,109,115,141,147,152,170,183,192,199,204,234,235,243,247,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'term':([62,81,84,85,88,101,106,109,115,141,147,152,170,183,192,199,204,234,235,243,247,],[99,99,99,99,99,99,99,99,99,99,99,205,99,99,99,99,99,99,99,99,99,]),'negativo':([62,81,84,85,88,101,106,109,115,141,147,152,170,183,192,199,204,234,235,243,247,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'vm1':([62,81,84,85,88,101,106,109,115,141,147,152,170,183,192,199,204,232,234,235,243,247,],[102,102,102,102,102,148,102,102,102,102,148,102,102,102,102,102,102,244,102,102,102,102,]),'factor':([62,81,84,85,88,101,106,109,115,141,147,152,170,183,192,199,204,234,235,243,247,],[103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'leftP':([62,81,84,85,88,101,106,109,115,141,147,152,170,183,192,199,204,234,235,243,247,],[106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,]),'indice_dimension':([63,],[108,]),'desdeBody':([65,],[112,]),'body':([65,111,130,223,],[113,157,180,237,]),'function5':([72,174,],[120,218,]),'assignment3':([81,],[126,]),'expression':([84,85,106,115,],[131,133,155,169,]),'funCall2':([88,],[136,]),'funcallParam':([88,199,],[137,231,]),'exp_o':([99,],[141,]),'vm2':([101,147,204,243,],[149,149,233,149,]),'term_o':([103,],[152,]),'body1':([114,159,],[158,210,]),'statement':([114,118,159,172,],[159,172,159,172,]),'function4':([118,172,],[171,217,]),'function9':([124,176,],[175,220,]),'close_condition':([131,],[181,]),'loper':([132,],[183,]),'read1':([134,],[191,]),'route':([135,],[194,]),'terminaFunCall':([136,],[196,]),'funCall3':([137,231,],[198,242,]),'rightP':([155,],[206,]),'desde2':([170,235,],[213,246,]),'termina_fun':([171,175,],[215,219,]),'condition1':([180,],[222,]),'maxVariables':([194,],[229,]),'maxRows':([229,],[240,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAMA ID SEMICOLON declara_vars declara_fun principal','programa',6,'p_programa','parser.py',10),
  ('declara_fun -> functions','declara_fun',1,'p_declara_fun','parser.py',16),
  ('functions -> function_t functions','functions',2,'p_functions','parser.py',22),
  ('functions -> function_v functions','functions',2,'p_functions','parser.py',23),
  ('functions -> empty','functions',1,'p_functions','parser.py',24),
  ('principal -> principalI declara_vars principal1 RCURBRACKET','principal',4,'p_principal','parser.py',32),
  ('principalI -> principalS LCURBRACKET','principalI',2,'p_principalI','parser.py',38),
  ('principalS -> PRINCIPAL','principalS',1,'p_principalS','parser.py',44),
  ('principal1 -> stmt_v principal1','principal1',2,'p_principal1','parser.py',50),
  ('principal1 -> empty','principal1',1,'p_principal1','parser.py',51),
  ('declara_vars -> vars declara_vars','declara_vars',2,'p_declara_vars','parser.py',57),
  ('declara_vars -> empty','declara_vars',1,'p_declara_vars','parser.py',58),
  ('vars -> VAR type ID dimension SEMICOLON','vars',5,'p_vars','parser.py',64),
  ('type -> INT','type',1,'p_type','parser.py',70),
  ('type -> FLOAT','type',1,'p_type','parser.py',71),
  ('type -> CHAR','type',1,'p_type','parser.py',72),
  ('type -> STRING','type',1,'p_type','parser.py',73),
  ('type -> DATAFRAME','type',1,'p_type','parser.py',74),
  ('dimension -> LBRACKET CTEINT RBRACKET','dimension',3,'p_dimension','parser.py',80),
  ('dimension -> LBRACKET CTEINT RBRACKET LBRACKET CTEINT RBRACKET','dimension',6,'p_dimension','parser.py',81),
  ('dimension -> empty','dimension',1,'p_dimension','parser.py',82),
  ('function_t -> FUNCION functionI function2 inicia_fun declara_vars function4 termina_fun','function_t',7,'p_function_t','parser.py',89),
  ('functionI -> type ID','functionI',2,'p_functionI','parser.py',94),
  ('function2 -> LPAREN function3 RPAREN','function2',3,'p_function2','parser.py',100),
  ('function3 -> funParam function5','function3',2,'p_function3','parser.py',106),
  ('function3 -> empty','function3',1,'p_function3','parser.py',107),
  ('funParam -> type ID','funParam',2,'p_funParam','parser.py',113),
  ('inicia_fun -> LCURBRACKET','inicia_fun',1,'p_inicia_fun','parser.py',119),
  ('function4 -> statement function4','function4',2,'p_function4','parser.py',125),
  ('function4 -> empty','function4',1,'p_function4','parser.py',126),
  ('statement -> assignment','statement',1,'p_statement','parser.py',132),
  ('statement -> condition','statement',1,'p_statement','parser.py',133),
  ('statement -> write','statement',1,'p_statement','parser.py',134),
  ('statement -> loop','statement',1,'p_statement','parser.py',135),
  ('statement -> read','statement',1,'p_statement','parser.py',136),
  ('statement -> loadData','statement',1,'p_statement','parser.py',137),
  ('statement -> funCall SEMICOLON','statement',2,'p_statement','parser.py',138),
  ('statement -> return','statement',1,'p_statement','parser.py',139),
  ('assignment -> id equals assignment3 SEMICOLON','assignment',4,'p_assignment','parser.py',145),
  ('id -> identifier indice_dimension','id',2,'p_id','parser.py',152),
  ('identifier -> ID','identifier',1,'p_identifier','parser.py',158),
  ('indice_dimension -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET','indice_dimension',6,'p_indice_dimension','parser.py',164),
  ('indice_dimension -> LBRACKET exp RBRACKET','indice_dimension',3,'p_indice_dimension','parser.py',165),
  ('indice_dimension -> empty','indice_dimension',1,'p_indice_dimension','parser.py',166),
  ('equals -> EQUALS','equals',1,'p_equals','parser.py',172),
  ('assignment3 -> exp','assignment3',1,'p_assignment3','parser.py',178),
  ('assignment3 -> read','assignment3',1,'p_assignment3','parser.py',179),
  ('condition -> SI head_condition ENTONCES body condition1','condition',5,'p_condition','parser.py',185),
  ('head_condition -> LPAREN expression close_condition','head_condition',3,'p_head_condition','parser.py',191),
  ('body -> LCURBRACKET body1 RCURBRACKET','body',3,'p_body','parser.py',197),
  ('body1 -> statement body1','body1',2,'p_body1','parser.py',203),
  ('body1 -> empty','body1',1,'p_body1','parser.py',204),
  ('condition1 -> SINO body','condition1',2,'p_condition1','parser.py',210),
  ('condition1 -> empty','condition1',1,'p_condition1','parser.py',211),
  ('close_condition -> RPAREN','close_condition',1,'p_close_condition','parser.py',218),
  ('write -> ESCRIBE LPAREN expression RPAREN SEMICOLON','write',5,'p_write','parser.py',224),
  ('expression -> exp loper exp','expression',3,'p_expression','parser.py',230),
  ('expression -> exp','expression',1,'p_expression','parser.py',231),
  ('loper -> GREATERTHAN','loper',1,'p_loper','parser.py',237),
  ('loper -> LESSTHAN','loper',1,'p_loper','parser.py',238),
  ('loper -> GREATEREQ','loper',1,'p_loper','parser.py',239),
  ('loper -> LESSEQ','loper',1,'p_loper','parser.py',240),
  ('loper -> NOTEQUAL','loper',1,'p_loper','parser.py',241),
  ('loper -> ISEQUAL','loper',1,'p_loper','parser.py',242),
  ('exp -> term','exp',1,'p_exp','parser.py',248),
  ('exp -> term exp_o exp','exp',3,'p_exp','parser.py',249),
  ('exp_o -> PLUS','exp_o',1,'p_exp_o','parser.py',255),
  ('exp_o -> MINUS','exp_o',1,'p_exp_o','parser.py',256),
  ('term -> factor term_o term','term',3,'p_term','parser.py',262),
  ('term -> factor','term',1,'p_term','parser.py',263),
  ('factor -> vcte','factor',1,'p_factor','parser.py',269),
  ('factor -> leftP expression rightP','factor',3,'p_factor','parser.py',270),
  ('leftP -> LPAREN','leftP',1,'p_leftP','parser.py',276),
  ('rightP -> RPAREN','rightP',1,'p_rightP','parser.py',282),
  ('vcte -> cte_int','vcte',1,'p_vcte','parser.py',287),
  ('vcte -> cte_float','vcte',1,'p_vcte','parser.py',288),
  ('vcte -> cte_string','vcte',1,'p_vcte','parser.py',289),
  ('vcte -> id','vcte',1,'p_vcte','parser.py',290),
  ('vcte -> funCall','vcte',1,'p_vcte','parser.py',291),
  ('vcte -> vectorMatriz','vcte',1,'p_vcte','parser.py',292),
  ('cte_int -> negativo CTEINT','cte_int',2,'p_cte_int','parser.py',298),
  ('cte_float -> negativo CTEFLOAT','cte_float',2,'p_cte_float','parser.py',304),
  ('cte_string -> negativo CTESTRING','cte_string',2,'p_cte_string','parser.py',310),
  ('negativo -> MINUS','negativo',1,'p_negativo','parser.py',316),
  ('negativo -> empty','negativo',1,'p_negativo','parser.py',317),
  ('vectorMatriz -> LBRACKET vm1 RBRACKET','vectorMatriz',3,'p_vectorMatriz','parser.py',323),
  ('vectorMatriz -> vm1','vectorMatriz',1,'p_vectorMatriz','parser.py',324),
  ('vm1 -> LBRACKET vm2 RBRACKET COMMA vm1','vm1',5,'p_vm1','parser.py',330),
  ('vm1 -> LBRACKET vm2 RBRACKET','vm1',3,'p_vm1','parser.py',331),
  ('vm2 -> exp COMMA vm2','vm2',3,'p_vm2','parser.py',337),
  ('vm2 -> exp','vm2',1,'p_vm2','parser.py',338),
  ('vm2 -> empty','vm2',1,'p_vm2','parser.py',339),
  ('term_o -> TIMES','term_o',1,'p_term_o','parser.py',345),
  ('term_o -> DIVIDE','term_o',1,'p_term_o','parser.py',346),
  ('loop -> mientras','loop',1,'p_loop','parser.py',352),
  ('loop -> desde','loop',1,'p_loop','parser.py',353),
  ('mientras -> mientras1 HAZ body','mientras',3,'p_mientras','parser.py',359),
  ('mientras1 -> mientras_w LPAREN expression RPAREN','mientras1',4,'p_mientras1','parser.py',365),
  ('mientras_w -> MIENTRAS','mientras_w',1,'p_mientras_w','parser.py',371),
  ('desde -> nuevo_desde desdeBody','desde',2,'p_desde','parser.py',378),
  ('nuevo_desde -> DESDE id EQUALS desde2 HASTA desde2 HACER','nuevo_desde',7,'p_nuevo_desde','parser.py',384),
  ('desde2 -> exp','desde2',1,'p_desde2','parser.py',390),
  ('desdeBody -> body','desdeBody',1,'p_desdeBody','parser.py',396),
  ('read -> LEE LPAREN id read1 RPAREN SEMICOLON','read',6,'p_read','parser.py',402),
  ('read1 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET','read1',6,'p_read1','parser.py',408),
  ('read1 -> LBRACKET exp RBRACKET','read1',3,'p_read1','parser.py',409),
  ('read1 -> empty','read1',1,'p_read1','parser.py',410),
  ('loadData -> CARGAARCHIVO LPAREN ID route maxVariables maxRows RPAREN SEMICOLON','loadData',8,'p_loadData','parser.py',416),
  ('route -> CTESTRING','route',1,'p_route','parser.py',423),
  ('maxVariables -> CTEINT','maxVariables',1,'p_maxVariables','parser.py',429),
  ('maxRows -> CTEINT','maxRows',1,'p_maxRows','parser.py',435),
  ('funCall -> ID iniciaFunCall funCall2 terminaFunCall','funCall',4,'p_funCall','parser.py',441),
  ('iniciaFunCall -> LPAREN','iniciaFunCall',1,'p_iniciaFunCall','parser.py',447),
  ('funCall2 -> funcallParam funCall3','funCall2',2,'p_funCall2','parser.py',453),
  ('funCall2 -> empty','funCall2',1,'p_funCall2','parser.py',454),
  ('funcallParam -> exp','funcallParam',1,'p_funcallParam','parser.py',460),
  ('funCall3 -> COMMA funcallParam funCall3','funCall3',3,'p_funCall3','parser.py',466),
  ('funCall3 -> empty','funCall3',1,'p_funCall3','parser.py',467),
  ('terminaFunCall -> RPAREN','terminaFunCall',1,'p_terminaFunCall','parser.py',473),
  ('return -> REGRESA return1 SEMICOLON','return',3,'p_return','parser.py',480),
  ('return1 -> vcte','return1',1,'p_return1','parser.py',486),
  ('return1 -> exp','return1',1,'p_return1','parser.py',487),
  ('function5 -> COMMA funParam function5','function5',3,'p_function5','parser.py',493),
  ('function5 -> empty','function5',1,'p_function5','parser.py',494),
  ('termina_fun -> RCURBRACKET','termina_fun',1,'p_termina_fun','parser.py',500),
  ('function_v -> FUNCION functionV function2 inicia_fun declara_vars function9 termina_fun','function_v',7,'p_function_v','parser.py',506),
  ('functionV -> VOID ID','functionV',2,'p_functionV','parser.py',513),
  ('function9 -> stmt_v function9','function9',2,'p_function9','parser.py',519),
  ('function9 -> empty','function9',1,'p_function9','parser.py',520),
  ('stmt_v -> assignment','stmt_v',1,'p_stmt_v','parser.py',526),
  ('stmt_v -> condition','stmt_v',1,'p_stmt_v','parser.py',527),
  ('stmt_v -> write','stmt_v',1,'p_stmt_v','parser.py',528),
  ('stmt_v -> loop','stmt_v',1,'p_stmt_v','parser.py',529),
  ('stmt_v -> read','stmt_v',1,'p_stmt_v','parser.py',530),
  ('stmt_v -> loadData','stmt_v',1,'p_stmt_v','parser.py',531),
  ('stmt_v -> funCall SEMICOLON','stmt_v',2,'p_stmt_v','parser.py',532),
  ('stmt_v -> return','stmt_v',1,'p_stmt_v','parser.py',533),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',548),
]
